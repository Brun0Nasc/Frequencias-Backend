definitions:
  usuarios.ListaUsuarios:
    properties:
      data:
        items:
          $ref: '#/definitions/usuarios.Usuario'
        type: array
    type: object
  usuarios.Usuario:
    properties:
      created_at:
        type: string
      email:
        type: string
      id:
        type: integer
      nome:
        type: string
      removed_at:
        type: string
      senha:
        type: string
      tipo:
        type: integer
      updated_at:
        type: string
    type: object
info:
  contact:
    email: caiosousafernandesferreira@hotmail.com
    name: Equipe Komanda
    url: http://www.swagger.io/support
  license:
    name: Mozilla Public License 2.0
    url: https://www.mozilla.org/en-US/MPL/2.0/
paths:
  /login:
    post:
      consumes:
      - application/json
      description: Autentica um usuário com as credenciais enviadas e se OK gera um
        token
      operationId: Authentication
      parameters:
      - description: Login
        in: body
        name: Login
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: error
          schema:
            type: string
        "500":
          description: error
          schema:
            type: string
      summary: Login para usuário
      tags:
      - Usuarios
  /usuarios:
    post:
      consumes:
      - application/json
      description: POST a new User. For the request to be met, the "nome", "email",
        "password", are required.
      parameters:
      - description: NewUser
        in: body
        name: NewUser
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "201":
          description: OK
          schema:
            type: string
        "400":
          description: error
          schema:
            type: string
        "401":
          description: error
          schema:
            type: string
      security:
      - bearerAuth: []
      summary: POST a new User
      tags:
      - Usuarios
  /usuarios/list_user:
    get:
      consumes:
      - application/json
      description: GET all people with sort orderBy & || order (desc, cresc)
      parameters:
      - description: column
        enum:
        - id
        - nome
        - created_at
        in: query
        name: orderBy
        type: string
      - description: order desc
        in: query
        name: order
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/usuarios.ListaUsuarios'
            type: array
        "400":
          description: error
          schema:
            type: string
        "401":
          description: error
          schema:
            type: string
      security:
      - bearerAuth: []
      summary: GET all people with sort
      tags:
      - Usuario
securityDefinitions:
  bearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
